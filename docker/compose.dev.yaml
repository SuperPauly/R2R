volumes:
  postgres_data:
    name: postgres_data
  cloudbeaver_data:
    name: cloudbeaver_data

services:
  postgres:
    image: pgvector/pgvector:pg16
    profiles: [postgres]
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
      - POSTGRES_PORT=5432
      - PGPORT=5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: on-failure
    command: >
      postgres
      -c log_destination=stderr
      -c log_statement=all
      -c log_min_messages=info
      -c log_min_error_statement=info
    # command: >
    #   postgres
    #   -c max_connections=1024

  graph_clustering:
    image: ragtoriches/cluster-prod
    ports:
      - "7276:7276"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7276/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  r2r:
    build:
      context: ../
      dockerfile: py/Dockerfile
      no_cache: false
      pull: false
    env_file: "env/r2r.env"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7272/v3/health"]
      interval: 6s
      timeout: 5s
      retries: 5
    restart: on-failure
    ports:
      - "7272:7272"
    extra_hosts:
      - host.docker.internal:host-gateway
    # Note: Uncomment below for fast local dev. This alter the hosts R2R/py dir so be careful.
    # volumes:
    #   - ../py:/app
    # command: [
    #     "uvicorn",
    #     "core.main.app_entry:app",
    #     "--host", "0.0.0.0",
    #     "--port", "7272",
    #     "--reload" # Enable hot reloading
    # ]

  r2r-dashboard:
    image: sciphiai/r2r-dashboard:1.0.3
    env_file:
      - ./env/r2r-dashboard.env
    ports:
      - "7273:3000"

  cloudbeaver:
    image: dbeaver/cloudbeaver:latest
    container_name: cloudbeaver
    profiles: [cloudbeaver]
    restart: unless-stopped
    ports:
      - "8081:8978" # Access CloudBeaver UI via http://localhost:8081
    volumes:
      - cloudbeaver_data:/opt/cloudbeaver/workspace
    environment:
      CLOUDBEAVER_APP_ANONYMOUS_ACCESS_ENABLED: "true"
    depends_on:
      - postgres
